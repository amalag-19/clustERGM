// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;
using namespace std;

// rowsum_Mat
vec rowsum_Mat(mat M);
RcppExport SEXP _clustERGM_rowsum_Mat(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(rowsum_Mat(M));
    return rcpp_result_gen;
END_RCPP
}
// colsum_Mat
vec colsum_Mat(mat M);
RcppExport SEXP _clustERGM_colsum_Mat(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(colsum_Mat(M));
    return rcpp_result_gen;
END_RCPP
}
// epan
float epan(float input);
RcppExport SEXP _clustERGM_epan(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(epan(input));
    return rcpp_result_gen;
END_RCPP
}
// gamma_update_HMM_stat_dir
cube gamma_update_HMM_stat_dir(mat gamma, vec pi, mat theta, mat network, int N, int K);
RcppExport SEXP _clustERGM_gamma_update_HMM_stat_dir(SEXP gammaSEXP, SEXP piSEXP, SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(gamma_update_HMM_stat_dir(gamma, pi, theta, network, N, K));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_stat_dir_oe
vec grad_HMM_stat_dir_oe(mat theta, mat gamma, mat network, int N, int K);
RcppExport SEXP _clustERGM_grad_HMM_stat_dir_oe(SEXP thetaSEXP, SEXP gammaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_stat_dir_oe(theta, gamma, network, N, K));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_stat_dir_re
vec grad_HMM_stat_dir_re(mat theta, mat gamma, mat network, int N, int K);
RcppExport SEXP _clustERGM_grad_HMM_stat_dir_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_stat_dir_re(theta, gamma, network, N, K));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_oe
mat hess_HMM_stat_dir_oe(mat theta, mat gamma, int N, int K);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_oe(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_oe(theta, gamma, N, K));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_re
mat hess_HMM_stat_dir_re(mat theta, mat gamma, int N, int K);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_re(theta, gamma, N, K));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_oe_re
mat hess_HMM_stat_dir_oe_re(mat theta, mat gamma, int N, int K);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_oe_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_oe_re(theta, gamma, N, K));
    return rcpp_result_gen;
END_RCPP
}
// ELBO_conv_HMM_stat_dir
float ELBO_conv_HMM_stat_dir(mat gamma, vec alpha, mat theta, mat network, int N, int K);
RcppExport SEXP _clustERGM_ELBO_conv_HMM_stat_dir(SEXP gammaSEXP, SEXP alphaSEXP, SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(ELBO_conv_HMM_stat_dir(gamma, alpha, theta, network, N, K));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_stat_dir_oe_K1
float grad_HMM_stat_dir_oe_K1(vec theta, mat network, int N);
RcppExport SEXP _clustERGM_grad_HMM_stat_dir_oe_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_stat_dir_oe_K1(theta, network, N));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_stat_dir_re_K1
float grad_HMM_stat_dir_re_K1(vec theta, mat network, int N);
RcppExport SEXP _clustERGM_grad_HMM_stat_dir_re_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_stat_dir_re_K1(theta, network, N));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_oe_K1
float hess_HMM_stat_dir_oe_K1(vec theta, int N);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_oe_K1(SEXP thetaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_oe_K1(theta, N));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_re_K1
float hess_HMM_stat_dir_re_K1(vec theta, int N);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_re_K1(SEXP thetaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_re_K1(theta, N));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_stat_dir_oe_re_K1
float hess_HMM_stat_dir_oe_re_K1(vec theta, int N);
RcppExport SEXP _clustERGM_hess_HMM_stat_dir_oe_re_K1(SEXP thetaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_stat_dir_oe_re_K1(theta, N));
    return rcpp_result_gen;
END_RCPP
}
// ELBO_conv_HMM_stat_dir_K1
float ELBO_conv_HMM_stat_dir_K1(vec theta, mat network, int N);
RcppExport SEXP _clustERGM_ELBO_conv_HMM_stat_dir_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(ELBO_conv_HMM_stat_dir_K1(theta, network, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_clustERGM_rowsum_Mat", (DL_FUNC) &_clustERGM_rowsum_Mat, 1},
    {"_clustERGM_colsum_Mat", (DL_FUNC) &_clustERGM_colsum_Mat, 1},
    {"_clustERGM_epan", (DL_FUNC) &_clustERGM_epan, 1},
    {"_clustERGM_gamma_update_HMM_stat_dir", (DL_FUNC) &_clustERGM_gamma_update_HMM_stat_dir, 6},
    {"_clustERGM_grad_HMM_stat_dir_oe", (DL_FUNC) &_clustERGM_grad_HMM_stat_dir_oe, 5},
    {"_clustERGM_grad_HMM_stat_dir_re", (DL_FUNC) &_clustERGM_grad_HMM_stat_dir_re, 5},
    {"_clustERGM_hess_HMM_stat_dir_oe", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_oe, 4},
    {"_clustERGM_hess_HMM_stat_dir_re", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_re, 4},
    {"_clustERGM_hess_HMM_stat_dir_oe_re", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_oe_re, 4},
    {"_clustERGM_ELBO_conv_HMM_stat_dir", (DL_FUNC) &_clustERGM_ELBO_conv_HMM_stat_dir, 6},
    {"_clustERGM_grad_HMM_stat_dir_oe_K1", (DL_FUNC) &_clustERGM_grad_HMM_stat_dir_oe_K1, 3},
    {"_clustERGM_grad_HMM_stat_dir_re_K1", (DL_FUNC) &_clustERGM_grad_HMM_stat_dir_re_K1, 3},
    {"_clustERGM_hess_HMM_stat_dir_oe_K1", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_oe_K1, 2},
    {"_clustERGM_hess_HMM_stat_dir_re_K1", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_re_K1, 2},
    {"_clustERGM_hess_HMM_stat_dir_oe_re_K1", (DL_FUNC) &_clustERGM_hess_HMM_stat_dir_oe_re_K1, 2},
    {"_clustERGM_ELBO_conv_HMM_stat_dir_K1", (DL_FUNC) &_clustERGM_ELBO_conv_HMM_stat_dir_K1, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_clustERGM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
